// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model InviteConfig {
  id       Int    @id @default(autoincrement())
  clientID Int
  config   Json
  client   Client @relation(fields: [clientID], references: [id], onDelete: Cascade)
  name     String @db.VarChar(255)
}

model Client {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(255)
  InviteConfigs InviteConfig[]
  users         User[]
  sessions      Session[]
}

model Enrollment {
  id             Int              @id @default(autoincrement())
  userID         Int
  SessionID      Int
  user           User             @relation(fields: [userID], references: [id], onDelete: Cascade)
  session        Session          @relation(fields: [SessionID], references: [id], onDelete: Cascade)
  AttendanceLogs AttendanceLogs[]
}

enum TokenType {
  ACCESS
  REFRESH
  RESET_PASSWORD
  VERIFY_EMAIL
}

enum UserType {
  ADMIN
  USER
  CLIENT
  MACHINE
}

enum UserStatus {
  ENABLED
  DISABLED
}

model User {
  id          Int          @id @default(autoincrement())
  name        String       @db.VarChar(255)
  email       String       @unique @db.VarChar(255)
  password    String       @db.VarChar(255)
  clientID    Int?
  userData    Json?
  userType    UserType
  status      UserStatus   @default(ENABLED)
  client      Client?      @relation(fields: [clientID], references: [id], onDelete: Cascade)
  Enrollments Enrollment[]
  Token       Token[]
}

model Token {
  id          Int       @id @default(autoincrement())
  token       String
  type        TokenType
  expires     DateTime
  blacklisted Boolean
  userId      Int
  createdAt   DateTime  @default(now())
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id            Int          @id @default(autoincrement())
  name          String       @db.VarChar(255)
  startDateTime DateTime     @db.Date
  endDateTime   DateTime     @db.Date
  clientID      Int
  client        Client       @relation(fields: [clientID], references: [id], onDelete: Cascade)
  Enrollments   Enrollment[]
}

model AttendanceLogs {
  id                 Int        @id @default(autoincrement())
  enrollmentID       Int
  attendanceMarkedAt DateTime   @db.Date
  enrollment         Enrollment @relation(fields: [enrollmentID], references: [id], onDelete: Cascade)
}
